# This is a basic workflow to deploy AWS Stack with Akeyless Integration

name: "Deploy Cloud Formation Stacks in PSC AWS devops-master"

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      cloudFormationStack:
        type: choice
        description: 'Stack to Deploy'
        options:
          - pscMSCloudApp
          - pscAxoniusConfig
        required: true

jobs:
  stack:
    name: Deploy stack to AWS
    runs-on: ubuntu-latest
    permissions: # Must change the job token permissions to use JWT auth
      id-token: write
      contents: read
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

    - name: Vault Secrets # Fetch AWS Credentials from Akeyless Dynamic Producer
      uses: LanceMcCarthy/akeyless-action@v3
      id: secrets
      with:
        access-id: ${{ secrets.AKEYLESS_JWT_ID }}
        producer-for-aws-access: /InfoSec/aws-076795817913-psc-devops-master
    
    - name: Configure AWS Credentials For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        aws-region: "us-east-1"

    - name: AWS CloudFormation "Deploy CloudFormation Stack" Action for GitHub Actions
      uses: aws-actions/aws-cloudformation-github-deploy@v1.2.0
      with:
        name: ${{ steps.env-name.outputs.environment }}
        template: ${{ github.event.inputs.cloudFormationStack }}.yml
        no-fail-on-empty-changeset: "1"
